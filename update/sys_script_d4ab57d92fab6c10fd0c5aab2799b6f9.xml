<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_58872_needit_needit</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_58872_needit_needit">work_notes_listLIKE^EQ<item endquery="false" field="work_notes_list" goto="false" newquery="false" operator="LIKE" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Incident Log Keyword Automation - sshcmd</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	var regexp = /SSHCMD (.+)/i;

	if(!current.work_notes.match(regexp)) {
		return;
	}

	try {
		var inputs        = {};
		var output        = "";
		var error_message = "";

		var match         = current.work_notes.match(regexp);
		inputs['command'] = match[1];
		
		gs.info("Request: SSHCMD: " + match[1] + ";");
		
		// Start Asynchronously: Uncomment to run in background. Code snippet will not have access to outputs.
		// sn_fd.FlowAPI.getRunner().subflow('x_58872_needit.incident_keyword_ssh').inBackground().withInputs(inputs).run();
				
		// Execute Synchronously: Run in foreground. Code snippet has access to outputs.
		var result = sn_fd.FlowAPI.getRunner().subflow('x_58872_needit.incident_keyword_ssh').inForeground().withInputs(inputs).run();

		// Get Outputs:
		// Note: outputs can only be retrieved when executing synchronously.
		var outputs = result.getOutputs();

		gs.info("SSHCMD output: " + outputs['output'] + "; end");
		gs.info("SSHCMD error: "  + outputs['error_message'] + "; end");
		
	} catch (ex) {
		var message = ex.getMessage();
		gs.error(message);
	}
	if(outputs['output']) {
		current.work_notes = "Results:\n" + outputs['output'];
	}
	else if(outputs['error_message']) {
		current.work_notes = "Errors:\n" + outputs['error_message'];	
	}
	

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-04-15 16:23:46</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>d4ab57d92fab6c10fd0c5aab2799b6f9</sys_id>
        <sys_mod_count>27</sys_mod_count>
        <sys_name>Incident Log Keyword Automation - sshcmd</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_d4ab57d92fab6c10fd0c5aab2799b6f9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-04-16 19:40:44</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=d4ab57d92fab6c10fd0c5aab2799b6f9"/>
</record_update>
