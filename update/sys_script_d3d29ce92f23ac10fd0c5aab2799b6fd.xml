<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_58872_needit_needit</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_58872_needit_needit">work_notes_listLIKE^EQ<item endquery="false" field="work_notes_list" goto="false" newquery="false" operator="LIKE" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Incident Log Keyword Automation - IPinfo</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function() {
	if(!current.work_notes.match(/ipinfo/)) {
			return;
	}

	try {
		var inputs        = {};
		var regex         = /ipinfo (.+)/i;
		var match         = current.work_notes.match(regex);

		inputs['ip_address'] = match[1];
		
		gs.info("Request: ipinfo: " + match[1] + ";");

		// Start Asynchronously: Uncomment to run in background. Code snippet will not have access to outputs.
		// sn_fd.FlowAPI.getRunner().subflow('x_58872_needit.incident_keyword_ipinfo').inBackground().withInputs(inputs).run();
				
		// Execute Synchronously: Run in foreground. Code snippet has access to outputs.
		var result = sn_fd.FlowAPI.getRunner().subflow('x_58872_needit.incident_keyword_ipinfo').inForeground().withInputs(inputs).run();
		var outputs = result.getOutputs();

		// Get Outputs:
		// Note: outputs can only be retrieved when executing synchronously.
		var hostname = outputs['hostname']; // String
		var city = outputs['city']; // String
		var latitude = outputs['latitude']; // String
		var country = outputs['country']; // String
		var longitude = outputs['longitude']; // String

		current.work_notes =
			"ip address: " + match[1] + "\n" +
			"hostname: " + hostname + "\n" +
			"city: " + city + "\n" + "\n" +
			"country: " + country + "\n" +
			"longitude: " + longitude + "\n" +
			"latitude: " + latitude;
		
	} catch (ex) {
		var message = ex.getMessage();
		gs.error(message);
	}
	
})();]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-04-15 20:14:42</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>d3d29ce92f23ac10fd0c5aab2799b6fd</sys_id>
        <sys_mod_count>17</sys_mod_count>
        <sys_name>Incident Log Keyword Automation - IPinfo</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_d3d29ce92f23ac10fd0c5aab2799b6fd</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-04-16 19:01:42</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=d3d29ce92f23ac10fd0c5aab2799b6fd"/>
</record_update>
